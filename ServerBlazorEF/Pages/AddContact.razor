@page "/addaccount"
@inject AuthService AuthService
@inject AccountService accountService
@inject NavigationManager NavManager

<PageTitle>Add Contact</PageTitle>
@if (isAdmin) {
    <div class="top-row-admin">
    <p style="font-weight: bold; text-align: left;">Admin:</p>
    <p><a href="/contacts">Contacts</a></p>
    <p><a href="/paymentmethods">Payment Methods</a></p>
    <p><a href="/transtypes">Transaction Types</a></p>
    <p><a href="/taxreceipt">Tax Receipts</a></p>
    </div>
}
<h1>Add Contact</h1>

<EditForm Model="@account" OnValidSubmit="HandleValidSubmit"> 

    <div class="form-group">
        <label for="FirstName">FirstName:</label>
        <InputText id="FirstName" class="form-control" @bind-Value="account.FirstName" />
    </div>

    <div class="form-group">
        <label for="LastName">LastName:</label>
        <InputText id="LastName" class="form-control" @bind-Value="account.LastName" />
    </div>

    <div class="form-group">
        <label for="Email">Email:</label>
        <InputText id="Email" class="form-control" @bind-Value="account.Email" />
    </div>

    <div class="form-group">
        <label for="Street">Street:</label>
        <InputText id="Street" class="form-control" @bind-Value="account.Street" />
    </div>
        <div class="form-group">
        <label for="City">City:</label>
        <InputText id="City" class="form-control" @bind-Value="account.City" />
    </div>
        <div class="form-group">
        <label for="PostalCode">PostalCode:</label>
        <InputText id="PostalCode" class="form-control" @bind-Value="account.PostalCode" />
    </div>
        <div class="form-group">
        <label for="Country">Country:</label>
        <InputText id="Country" class="form-control" @bind-Value="account.Country" />
    </div>
    <div class="form-group">
        <label for="Created">Created:</label>
        <code>@DateTime.Now</code>
    </div>

    <div class="form-group">
        <label for="Modified">Modified:</label>
        <code>@DateTime.Now</code>
    </div>

    <div class="form-group">
        <label for="CreatedBy">Created By:</label>
        <code>@username</code>
    </div>

    <div class="form-group">
        <label for="ModifiedBy">Modified By:</label>
        <code>@username</code>
    </div>

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private Account account = new Account();
    private string username = "";
    private bool isAdmin = false;
    protected override async Task OnInitializedAsync() {
        var authState = await AuthService.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated ?? false) {
            // User is authenticated, continue with your logic
            isAdmin = authState.User.IsInRole("Admin");
            username = authState.User.Identity?.Name ?? "No Name";
            if(!isAdmin) {
                NavManager.NavigateTo("/login");
            }

        } else {
            // User is not authenticated, handle it as needed
            NavManager.NavigateTo("/login");
        }
    }

    private async Task HandleValidSubmit()
    {
        // Set Created, Modified, CreatedBy, and ModifiedBy
        account.Created = DateTime.Now;
        account.Modified = DateTime.Now;
        account.CreatedBy = username;
        account.ModifiedBy = username;

        await accountService.InsertAccountAsync(account);
        NavManager.NavigateTo("/contacts");
    }
}
